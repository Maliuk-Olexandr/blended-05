{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/markup-tasks.js","../src/js/local-storage-api.js","../src/js/render-tasks.js","../src/js/theme-switcher.js","../src/main.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('#task-form'),\n  taskList: document.querySelector('.tasks-list'),\n  chengeTheme: document.querySelector('#themeToggle'),\n};\n\nexport default refs;\n","\nexport function createTaskItem({ title, description }) {\n  return `\n    <li class=\"task-list-item\">\n        <button class=\"task-list-item-btn\">Delete</button>\n        <h3>${title}</h3>\n        <p>${description}</p>\n    </li>`;\n}\n","// Function to save tasks to local storage\nexport function saveTasksToLocalStorage(tasks) {\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n// Function to load tasks from local storage\nexport function loadTasksFromLocalStorage() {\n  const tasks = localStorage.getItem('tasks');\n  return tasks ? JSON.parse(tasks) : [];\n}\n// Function to clear tasks from local storage\nexport function clearTasksFromLocalStorage() {\n  localStorage.removeItem('tasks');\n}\n\n\n","import refs from './refs.js';\nimport { createTaskItem } from './markup-tasks.js';\nimport { clearTasksFromLocalStorage } from './local-storage-api.js';\n\nexport function renderTasks(tasks) {\n  refs.taskList.innerHTML = ''; // Clear the task list before rendering\n  if (tasks.length === 0) {\n    refs.taskList.innerHTML = '<li class=\"empty-message\">No tasks yet.</li>';\n    clearTasksFromLocalStorage();\n    return;\n  }\n  tasks.forEach(task => {\n    const taskItem = createTaskItem(task);\n    refs.taskList.insertAdjacentHTML('beforeend', taskItem);\n  });\n}\n\n\n","\nexport function toggleTheme() {\n  const themeToggle = document.querySelector('body');\n  if (themeToggle.classList.contains('theme-dark')) {\n    themeToggle.classList.remove('theme-dark');\n    themeToggle.classList.add('theme-light');\n    localStorage.setItem('theme', 'light');\n  } else {\n    themeToggle.classList.remove('theme-light');\n    themeToggle.classList.add('theme-dark');\n    localStorage.setItem('theme', 'dark');\n  }\n}\n","/*\n  Створи список справ.\n  На сторінці є два інпути які має вводиться назва і текст задачі.\n  Після натискання на кнопку \"Add\" завдання додається до списку #task-list.\n\n  У кожної картки має бути кнопка \"Delete\", щоб можна було\n  прибрати завдання зі списку.\n  Список із завданнями має бути доступним після перезавантаження сторінки.\n\n  Розмітка картки задачі\n  <li class=\"task-list-item\">\n      <button class=\"task-list-item-btn\">Delete</button>\n      <h3>Заголовок</h3>\n      <p>Текст</p>\n  </li>\n*/\n\nimport refs from './js/refs.js';\nimport { renderTasks } from './js/render-tasks.js';\nimport {\n  saveTasksToLocalStorage,\n  loadTasksFromLocalStorage,\n  clearTasksFromLocalStorage,\n} from './js/local-storage-api.js';\nimport { toggleTheme } from './js/theme-switcher.js';\n// Initialize an empty array to hold tasks\n// This will be used to store tasks in memory and also to sync with local storage\nlet tasks = [];\n\n// Load tasks from local storage when the script runs\nif (localStorage.getItem('tasks')) {\n  const storedTasks = loadTasksFromLocalStorage();\n  if (storedTasks && storedTasks.length > 0) {\n    tasks = storedTasks;\n    renderTasks(tasks); // Render tasks if there are any in local storage\n  }\n} else {\n  clearTasksFromLocalStorage(); // Clear local storage if no tasks exist\n}\n\n// const savedTheme = localStorage.getItem('theme'); \n// if (savedTheme === 'light') {\n//   document.body.classList.add('theme-light');\n//   document.body.classList.remove('theme-dark');\n// } else {\n//   document.body.classList.add('theme-dark');\n//   document.body.classList.remove('theme-light');\n// }\nconst savedTheme = localStorage.getItem('theme') || 'dark';\ndocument.body.classList.remove('theme-light', 'theme-dark'); // Remove both themes first\ndocument.body.classList.add(`theme-${savedTheme}`);\n\n// Add event listener to the form to handle submission\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault(); // Prevent the default form submission behavior\n\n  const title = event.target.taskName.value.trim();\n  const description = event.target.taskDescription.value.trim();\n\n  if (title && description) {\n    const task = { title, description };\n    tasks.push(task); // Add the new task to the tasks array\n  } else {\n    alert('Please enter both title and description for the task.');\n  }\n  refs.form.reset(); // Reset the form fields\n  renderTasks(tasks);\n  saveTasksToLocalStorage(tasks); // Save tasks to local storage\n});\n\n// Add event listener to the task list for handling delete button clicks\nrefs.taskList.addEventListener('click', event => {\n  if (event.target.classList.contains('task-list-item-btn')) {\n    const taskItem = event.target.closest('.task-list-item');\n    const taskIndex = Array.from(refs.taskList.children).indexOf(taskItem);\n    tasks.splice(taskIndex, 1); // Remove the task from the tasks array\n    saveTasksToLocalStorage(tasks); // Update local storage with the new tasks array\n    renderTasks(tasks); // Re-render the task list\n  }\n});\n\n// Add event listener to the theme toggle button\nrefs.chengeTheme.addEventListener('click', () => {\n  toggleTheme(); // Call the function to toggle the theme\n});\n"],"names":["refs","createTaskItem","title","description","saveTasksToLocalStorage","tasks","loadTasksFromLocalStorage","clearTasksFromLocalStorage","renderTasks","task","taskItem","toggleTheme","themeToggle","storedTasks","savedTheme","event","taskIndex"],"mappings":"ssBAAA,MAAMA,EAAO,CACX,KAAM,SAAS,cAAc,YAAY,EACzC,SAAU,SAAS,cAAc,aAAa,EAC9C,YAAa,SAAS,cAAc,cAAc,CACpD,ECHO,SAASC,EAAe,CAAE,MAAAC,EAAO,YAAAC,GAAe,CACrD,MAAO;AAAA;AAAA;AAAA,cAGKD,CAAK;AAAA,aACNC,CAAW;AAAA,UAExB,CCPO,SAASC,EAAwBC,EAAO,CAC7C,aAAa,QAAQ,QAAS,KAAK,UAAUA,CAAK,CAAC,CACrD,CAEO,SAASC,GAA4B,CAC1C,MAAMD,EAAQ,aAAa,QAAQ,OAAO,EAC1C,OAAOA,EAAQ,KAAK,MAAMA,CAAK,EAAI,CAAA,CACrC,CAEO,SAASE,GAA6B,CAC3C,aAAa,WAAW,OAAO,CACjC,CCRO,SAASC,EAAYH,EAAO,CAEjC,GADAL,EAAK,SAAS,UAAY,GACtBK,EAAM,SAAW,EAAG,CACtBL,EAAK,SAAS,UAAY,+CAC1BO,IACA,MACD,CACDF,EAAM,QAAQI,GAAQ,CACpB,MAAMC,EAAWT,EAAeQ,CAAI,EACpCT,EAAK,SAAS,mBAAmB,YAAaU,CAAQ,CAC1D,CAAG,CACH,CCdO,SAASC,GAAc,CAC5B,MAAMC,EAAc,SAAS,cAAc,MAAM,EAC7CA,EAAY,UAAU,SAAS,YAAY,GAC7CA,EAAY,UAAU,OAAO,YAAY,EACzCA,EAAY,UAAU,IAAI,aAAa,EACvC,aAAa,QAAQ,QAAS,OAAO,IAErCA,EAAY,UAAU,OAAO,aAAa,EAC1CA,EAAY,UAAU,IAAI,YAAY,EACtC,aAAa,QAAQ,QAAS,MAAM,EAExC,CCeA,IAAIP,EAAQ,CAAA,EAGZ,GAAI,aAAa,QAAQ,OAAO,EAAG,CACjC,MAAMQ,EAAcP,IAChBO,GAAeA,EAAY,OAAS,IACtCR,EAAQQ,EACRL,EAAYH,CAAK,EAErB,MACEE,IAWF,MAAMO,EAAa,aAAa,QAAQ,OAAO,GAAK,OACpD,SAAS,KAAK,UAAU,OAAO,cAAe,YAAY,EAC1D,SAAS,KAAK,UAAU,IAAI,SAASA,CAAU,EAAE,EAGjDd,EAAK,KAAK,iBAAiB,SAAUe,GAAS,CAC5CA,EAAM,eAAc,EAEpB,MAAMb,EAAQa,EAAM,OAAO,SAAS,MAAM,OACpCZ,EAAcY,EAAM,OAAO,gBAAgB,MAAM,OAEvD,GAAIb,GAASC,EAAa,CACxB,MAAMM,EAAO,CAAE,MAAAP,EAAO,YAAAC,GACtBE,EAAM,KAAKI,CAAI,CACnB,MACI,MAAM,uDAAuD,EAE/DT,EAAK,KAAK,QACVQ,EAAYH,CAAK,EACjBD,EAAwBC,CAAK,CAC/B,CAAC,EAGDL,EAAK,SAAS,iBAAiB,QAASe,GAAS,CAC/C,GAAIA,EAAM,OAAO,UAAU,SAAS,oBAAoB,EAAG,CACzD,MAAML,EAAWK,EAAM,OAAO,QAAQ,iBAAiB,EACjDC,EAAY,MAAM,KAAKhB,EAAK,SAAS,QAAQ,EAAE,QAAQU,CAAQ,EACrEL,EAAM,OAAOW,EAAW,CAAC,EACzBZ,EAAwBC,CAAK,EAC7BG,EAAYH,CAAK,CAClB,CACH,CAAC,EAGDL,EAAK,YAAY,iBAAiB,QAAS,IAAM,CAC/CW,GACF,CAAC"}